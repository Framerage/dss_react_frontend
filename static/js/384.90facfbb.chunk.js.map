{"version":3,"file":"static/js/384.90facfbb.chunk.js","mappings":"sKAgIA,IACA,EAAe,IAA0B,6D,8BChIzC,GAAgB,qBAAuB,0CAA0C,aAAe,kCAAkC,mBAAqB,yC,4BC+CvJ,EAvCgD,SAAHA,GAKtC,IAJLC,EAAMD,EAANC,OACAC,EAAWF,EAAXE,YAAWC,EAAAH,EACXI,SAAAA,OAAQ,IAAAD,GAAQA,EAChBE,EAAIL,EAAJK,KAEAC,GAA4CC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GAQxC,OACEI,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,UAAW,QAAQC,UAC9BC,EAAAA,EAAAA,MAAA,KACEC,KAAI,IAAAC,OAAMb,GACVc,UAAWC,EAAQC,qBACnBR,OAAKS,EAAAA,EAAAA,GAAA,GAAMZ,GAAgBK,SAAA,EAE3BH,EAAAA,EAAAA,KAAA,OACEW,QAAQ,OACRC,IAAKvB,EACLwB,IAAI,QACJC,YAlBgB,SAACC,GACvBhB,EAAkB,CAChBiB,UAAU,WAADV,QACgC,KAAtCS,EAAEE,QAAUC,OAAOC,WAAa,GAAU,iBAAAb,QACW,IAAvCS,EAAEK,QAAUF,OAAOG,YAAc,GAAS,SAE/D,EAaQd,UAAWC,EAAQc,gBAErBtB,EAAAA,EAAAA,KAAA,OACEO,UAAWgB,IAAGf,EAAQgB,oBAAkBC,EAAAA,EAAAA,GAAA,GACrCjB,EAAQkB,kBAAoBlC,IAC5BW,SAEFb,QAKX,EC9CA,EAAwC,gDAAxC,EAAuG,uCAAvG,EAA6J,uCAA7J,EAAsN,0CAAtN,EAAqU,2C,uXCC/TqC,EAAc,IAAIC,IASlBC,EAA+C,IAAIC,QACrDC,EAAS,EAETC,OAAwC,EA6BrC,SAASC,EAAYC,GAC1B,OAAOC,OAAOC,KAAKF,GAChBG,OACAC,QACC,SAACC,GAAA,YAA2D,IAAnDL,EAAQK,EAA2C,IAE7DC,KAAI,SAACD,GACJ,MAAO,GAAPjC,OAAUiC,EAAA,KAAAjC,OACA,SAARiC,GArBWE,EAsBGP,EAAQO,OApBxBZ,EAAQa,IAAID,KAChBV,GAAU,EACVF,EAAQc,IAAIF,EAAMV,EAAOa,aAFKf,EAAQgB,IAAIJ,IADxB,IAsBRP,EAAQK,IAvBpB,IAAmBE,CAyBf,IACCG,UACL,CA2DO,SAASE,EACdC,EACAC,GAGA,IAFAd,EAAAe,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAoC,CAAC,EACrCG,EAAAH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAiBjB,EAEjB,GACyC,qBAAhCd,OAAOmC,2BACK,IAAnBD,EACA,CACA,IAAME,EAASP,EAAQQ,wBAWvB,OAVAP,EAASI,EAAgB,CACvBI,eAAgBJ,EAChBK,OAAQV,EACRW,kBAC+B,kBAAtBxB,EAAQyB,UAAyBzB,EAAQyB,UAAY,EAC9DC,KAAM,EACNC,mBAAoBP,EACpBQ,iBAAkBR,EAClBS,WAAYT,IAEP,WAEP,CACF,CAEA,IAAAU,EAnFF,SAAwB9B,GAEtB,IAAI+B,EAAKhC,EAAYC,GACjBgC,EAAWvC,EAAYkB,IAAIoB,GAE/B,IAAKC,EAAU,CAEb,IACIC,EADEC,EAAW,IAAIxC,IAGfyC,EAAW,IAAIhB,sBAAqB,SAACiB,GACzCA,EAAQC,SAAQ,SAACC,GAtEvB,IAAAC,EAyEcC,EACJF,EAAMhB,gBACNW,EAAWQ,MAAK,SAAChB,GAAA,OAAca,EAAMd,mBAAqBC,CAAS,IAGjEzB,EAAQ0C,iBAA8C,qBAApBJ,EAAMK,YAG1CL,EAAMK,UAAYH,GAGpB,OAAAD,EAAAL,EAASvB,IAAI2B,EAAMf,UAAnBgB,EAA4BF,SAAQ,SAACvB,GACnCA,EAAS0B,EAAQF,EACnB,GACF,GACF,GAAGtC,GAGHiC,EACEE,EAASF,aACRW,MAAMC,QAAQ7C,EAAQyB,WACnBzB,EAAQyB,UACR,CAACzB,EAAQyB,WAAa,IAE5BO,EAAW,CACTD,GAAAA,EACAI,SAAAA,EACAD,SAAAA,GAGFzC,EAAYgB,IAAIsB,EAAIC,EACtB,CAEA,OAAOA,CACT,CAmCqCc,CAAe9C,GAA1C+B,EAAAD,EAAAC,GAAII,EAAAL,EAAAK,SAAUD,EAAAJ,EAAAI,SAGlBa,EAAYb,EAASvB,IAAIE,IAAY,GAQzC,OAPKqB,EAAS1B,IAAIK,IAChBqB,EAASzB,IAAII,EAASkC,GAGxBA,EAAUC,KAAKlC,GACfqB,EAASvB,QAAQC,GAEV,WAELkC,EAAUE,OAAOF,EAAUG,QAAQpC,GAAW,GAErB,IAArBiC,EAAU/B,SAEZkB,EAASiB,OAAOtC,GAChBsB,EAASiB,UAAUvC,IAGC,IAAlBqB,EAASmB,OAEXlB,EAASmB,aACT7D,EAAY0D,OAAOpB,GAEvB,CACF,CCzGkCwB,EAAAA,UCrDlC,IA4BA,EA5BuD,SAAHrG,GAK7C,IAJLsG,EAAItG,EAAJsG,KACAzB,EAAE7E,EAAF6E,GAAE0B,EAAAvG,EACFwG,QAAAA,OAAO,IAAAD,GAAQA,EACfE,EAAMzG,EAANyG,OAEAC,ECkBK,WAW0C,IA9CjDrB,EA8CiDrF,EAAA6D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxB,CAAC,EAVxBU,EAAAvE,EAAAuE,UACAoC,EAAA3G,EAAA2G,MACAnB,EAAAxF,EAAAwF,gBACAoB,EAAA5G,EAAA4G,WACAvD,EAAArD,EAAAqD,KACAwD,EAAA7G,EAAA6G,YACAC,EAAA9G,EAAA8G,KACAC,EAAA/G,EAAA+G,cACA/C,EAAAhE,EAAAgE,eACAgD,EAAAhH,EAAAgH,SAEAC,EAA4BC,EAAAA,SAAyB,MAAIC,GAAA1G,EAAAA,EAAAA,GAAAwG,EAAA,GAAlDG,EAAAD,EAAA,GAAKE,EAAMF,EAAA,GACZvD,EAAiBsD,EAAAA,SACvBI,EAAgCJ,EAAAA,SAAgB,CAC9C5B,SAAUyB,EACV3B,WAAO,IACRmC,GAAA9G,EAAAA,EAAAA,GAAA6G,EAAA,GAHME,EAAAD,EAAA,GAAOE,EAAQF,EAAA,GAOtB3D,EAAS8D,QAAUV,EAEbE,EAAAA,WACJ,WAIE,IAAIhB,EAFJ,IAAIY,GAASM,EA8Bb,OA3BAlB,EAAYxC,EACV0D,GACA,SAAC9B,EAAQF,GACPqC,EAAS,CACPnC,OAAAA,EACAF,MAAAA,IAEExB,EAAS8D,SAAS9D,EAAS8D,QAAQpC,EAAQF,GAE3CA,EAAMhB,gBAAkByC,GAAeX,IAEzCA,IACAA,OAAY,EAEhB,GACA,CACE7C,KAAAA,EACAuD,WAAAA,EACArC,UAAAA,EAEAiB,gBAAAA,EAEAmB,MAAAA,GAEF3C,GAGK,WACDkC,GACFA,GAEJ,CACF,GAGA,CAGER,MAAMC,QAAQpB,GAAaA,EAAUf,WAAae,EAClD6C,EACA/D,EACAuD,EACAC,EACAC,EACAtB,EACAxB,EACA2C,IAIJ,IAAMgB,EAAc,OAAAtC,EAAAmC,EAAMpC,YAAN,EAAAC,EAAahB,OAC3BuD,EAA4BV,EAAAA,SAE/BE,IACDO,GACCd,GACAC,GACDc,EAAoBF,UAAYC,IAIhCC,EAAoBF,QAAUC,EAC9BF,EAAS,CACPnC,SAAUyB,EACV3B,WAAO,KAIX,IAAMyC,EAAS,CAACR,EAAQG,EAAMlC,OAAQkC,EAAMpC,OAO5C,OAJAyC,EAAOT,IAAMS,EAAO,GACpBA,EAAOvC,OAASuC,EAAO,GACvBA,EAAOzC,MAAQyC,EAAO,GAEfA,CACT,CD3HwBC,CAAU,CAC9BvD,UAAW,IADN6C,EAAGV,EAAHU,IAAK9B,EAAMoB,EAANpB,OAGZ,OACEtE,EAAAA,EAAAA,MAAA,OAAK6D,GAAIA,EAAI1D,UAAWC,EAA+BgG,IAAKA,EAAIrG,SAAA,EAC9DH,EAAAA,EAAAA,KAAA,OACEO,UAAWgB,IAAGf,GAAoBiB,EAAAA,EAAAA,GAAA,GAC/BjB,EAA0BkE,IAC1BvE,SAEFyF,GAAU5F,EAAAA,EAAAA,KAACmH,EAAAA,EAAW,CAACtB,OAAQA,EAAQuB,WAAS,IAAM1B,KAEzD1F,EAAAA,EAAAA,KAAA,OACEO,UAAWgB,IAAGf,GAAoBiB,EAAAA,EAAAA,GAAA,GAC/BjB,EAA2BkE,IAC3BvE,SAEFyF,EAAUF,GAAO1F,EAAAA,EAAAA,KAACmH,EAAAA,EAAW,CAACtB,OAAQA,EAAQuB,WAAS,QAIhE,E,2gBErCA,EAAgC,gCAAhC,EAA8E,8BAA9E,EAAyH,6BAAzH,EAAyK,mCAAzK,EAAwN,4BCuBlNC,EAAe,CACnB,CACEC,IAAKC,EACL7B,KAAM,mDACNjG,KAAM,iBAGR,CACE6H,IAAKC,EACL7B,KAAM,wCACNjG,KAAM,WACND,UAAU,GAEZ,CACE8H,IAAKC,EACL7B,KAAM,qBACNjG,KAAM,iBAGJ+H,EAAiB,CACrB,CACE9B,KCtCF,qzDDuCEzB,GAAI,gBACJ4B,OAAQ,CAAC4B,EAAaC,EAAaC,EAAaC,EAAaC,IAE/D,CACEnC,KClDqB,gpMDmDrBzB,GAAI,WACJ4B,OAAQ,CAACiC,EAAaC,EAAaC,GACnCpC,SAAS,GAEX,CACEF,KC9CF,k/FD+CEzB,GAAI,eACJ4B,OAAQ,CAACoC,EAAcC,KAwC3B,EArC2B,WACzB,OACElI,EAAAA,EAAAA,KAAA,OAAKO,UAAWC,EAAsBL,UACpCC,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAoBL,SAAA,EAClCH,EAAAA,EAAAA,KAAA,OAAKO,UAAWC,EAAmBL,SAChCkH,EAAa7E,KAAI,SAAA2F,GAAI,OACpBnI,EAAAA,EAAAA,KAACoI,EAAW,CAEV/I,OAAQ8I,EAAKb,IACbhI,YAAa6I,EAAKzC,KAClBlG,SAAU2I,EAAK3I,SACfC,KAAM0I,EAAK1I,MAJN0I,EAAKzC,KAKV,OAGN1F,EAAAA,EAAAA,KAAA,OAAKO,UAAWC,EAAyBL,SACtCqH,EAAehF,KAAI,SAAA6F,GAAK,OACvBrI,EAAAA,EAAAA,KAACsI,EAAgB,CACf5C,KAAM2C,EAAM3C,KACZzB,GAAIoE,EAAMpE,GAEV4B,OAAQwC,EAAMxC,OACdD,QAASyC,EAAMzC,SAFVyC,EAAMpE,GAGX,OAINjE,EAAAA,EAAAA,KAAA,OACEuI,QAAS,kBAAMrH,OAAOsH,SAAS,EAAG,EAAE,EACpCjI,UAAWC,EAAkBL,SAC9B,qBAMT,C","sources":["assets/images/svgFrame.svg","webpack://dss-react/./src/components/previewCard/previewCard.module.css?4d0e","components/previewCard/PreviewCard.tsx","webpack://dss-react/./src/components/previewMainBlock/previewMainBlock.module.css?75ff","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","components/previewMainBlock/PreviewMainBlock.tsx","../node_modules/src/useInView.tsx","webpack://dss-react/./src/pages/mainPage/mainPage.module.css?f711","pages/mainPage/MainPage.tsx","components/previewMainBlock/constants.ts"],"sourcesContent":["var _metadata, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSvgFrame(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1088.000000pt\",\n    height: \"1280.000000pt\",\n    viewBox: \"0 0 1088.000000 1280.000000\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _metadata || (_metadata = /*#__PURE__*/React.createElement(\"metadata\", null, \"\\nCreated by potrace 1.15, written by Peter Selinger 2001-2017\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\",\n    fill: \"#000000\",\n    stroke: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2961 12494 c-126 -63 -148 -218 -42 -307 39 -32 95 -51 132 -43 41 8 28 -11 -25 -35 -69 -31 -207 -22 -344 22 -30 10 -32 13 -26 44 13 71 -32 138 -101 151 -48 9 -104 -21 -122 -63 -10 -25 -18 -33 -31 -29 -146 45 -328 56 -462 28 -219 -45 -412 -159 -474 -281 -19 -36 -33 -121 -20 -121 9 0 34 46 34 62 0 11 50 58 62 58 5 0 6 5 3 10 -3 6 -16 10 -27 10 -21 0 -21 0 -2 21 24 28 91 58 126 59 49 0 73 -52 30 -63 -15 -4 -15 -5 0 -6 27 -2 40 32 23 57 -14 19 -13 21 15 27 29 6 43 35 18 35 -9 0 -8 4 2 10 22 14 86 12 125 -4 46 -19 58 -61 25 -88 -17 -13 -18 -18 -6 -18 17 0 36 29 36 58 0 23 -35 56 -75 70 l-30 10 30 1 c17 1 41 4 55 8 l25 7 -25 8 c-15 5 -5 6 28 2 30 -3 72 -12 93 -21 73 -29 110 -101 76 -147 -16 -21 -60 -24 -82 -6 -18 15 -20 61 -2 80 10 12 9 12 -5 1 -18 -14 -24 -57 -10 -77 13 -21 54 -36 79 -29 15 3 30 18 39 40 12 30 12 40 0 69 -22 53 -89 94 -176 109 -21 4 -21 4 6 6 71 3 150 -43 181 -104 16 -31 51 -64 68 -65 6 0 16 13 22 29 13 36 -5 72 -63 120 l-39 32 44 -16 c80 -28 249 -124 256 -145 4 -11 4 -33 0 -49 -4 -20 0 -41 14 -67 12 -21 21 -47 21 -56 0 -21 16 -24 23 -5 4 9 6 9 6 -1 1 -13 -26 -41 -103 -108 -24 -21 -36 -40 -36 -58 0 -14 5 -26 10 -26 23 0 68 30 103 69 43 47 61 107 54 176 -5 46 -5 48 5 15 12 -42 5 -118 -16 -158 -22 -44 -75 -90 -122 -108 -61 -23 -159 -16 -202 15 -68 48 -93 159 -52 227 22 35 107 84 146 84 51 0 116 -42 134 -85 7 -16 9 -17 9 -3 1 24 -48 79 -86 94 -72 31 -163 6 -220 -60 -40 -44 -47 -69 -41 -146 9 -120 99 -195 233 -195 207 2 331 188 256 386 -25 65 -25 59 -3 59 9 0 32 8 51 18 34 18 34 18 115 -15 233 -93 433 -80 779 51 183 69 242 86 336 96 81 9 151 29 151 44 0 16 -130 -4 -223 -34 -50 -16 -93 -28 -95 -26 -4 5 138 60 193 75 82 22 159 8 199 -38 11 -12 21 -42 24 -71 4 -46 2 -52 -31 -85 -29 -29 -42 -35 -79 -35 -54 0 -104 30 -123 73 l-14 32 -1 -27 c-1 -66 97 -127 181 -113 138 24 168 222 46 303 -33 22 -55 28 -116 30 -97 5 -145 -11 -400 -133 -177 -84 -325 -145 -352 -145 -6 0 4 12 21 26 101 86 104 260 6 358 -69 70 -157 84 -245 40z m146 -39 c74 -31 113 -92 113 -175 0 -75 -35 -137 -95 -167 -25 -13 -22 -9 14 23 50 43 71 86 71 143 0 45 -15 91 -29 91 -6 0 -22 -11 -37 -24 -24 -20 -29 -33 -35 -96 -4 -44 -12 -76 -20 -81 -24 -17 -97 -3 -133 24 -96 74 -84 200 24 255 52 26 78 27 127 7z m-532 -165 c31 -12 58 -69 49 -106 -4 -14 -12 -23 -18 -21 -6 2 -46 17 -88 33 -43 16 -78 33 -78 37 0 5 13 22 29 38 31 30 61 36 106 19z m-355 -60 c40 -11 135 -68 127 -76 -3 -3 -29 7 -59 22 -29 15 -82 38 -118 51 -55 21 -59 23 -25 19 22 -3 56 -10 75 -16z m227 -61 c24 -21 44 -29 71 -29 20 0 44 -4 52 -10 11 -7 9 -11 -13 -19 -40 -15 -75 -14 -84 4 -5 9 -34 34 -63 57 -47 35 -51 40 -26 34 17 -4 45 -21 63 -37z m73 -15 c0 -9 -28 -3 -46 11 -17 13 -16 14 14 4 17 -6 32 -13 32 -15z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10293 12478 c-18 -9 -38 -46 -29 -55 2 -2 15 1 30 6 19 8 26 18 26 36 0 14 -1 25 -2 24 -2 0 -13 -5 -25 -11z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7604 12456 c-84 -39 -134 -122 -134 -221 0 -71 20 -119 73 -173 l41 -42 -69 24 c-94 32 -120 44 -335 146 -210 100 -269 120 -354 120 -107 0 -184 -58 -201 -151 -27 -149 150 -248 261 -146 28 25 36 41 39 77 4 41 4 42 -4 11 -5 -18 -21 -45 -35 -60 -23 -23 -35 -26 -92 -26 -60 0 -68 3 -90 28 -18 22 -24 40 -24 79 0 43 4 54 33 83 40 40 92 52 162 38 53 -11 248 -83 242 -89 -2 -2 -44 10 -93 26 -101 35 -196 52 -232 43 -20 -5 -16 -8 30 -23 29 -10 84 -20 122 -24 44 -3 117 -22 200 -52 313 -110 356 -123 441 -139 155 -30 336 -8 488 57 46 20 50 20 83 5 19 -10 44 -17 54 -17 24 0 24 2 1 -51 -48 -108 -33 -219 39 -301 58 -67 117 -92 216 -92 73 -1 85 2 129 29 93 57 132 184 85 275 -53 103 -199 142 -280 73 -32 -26 -60 -72 -60 -95 1 -7 7 1 14 17 52 116 206 119 284 5 27 -41 29 -99 3 -156 -61 -134 -277 -130 -368 8 -25 37 -28 51 -28 122 0 48 5 89 13 101 11 18 11 17 5 -10 -5 -16 -8 -60 -8 -96 0 -55 4 -72 28 -108 15 -23 49 -55 75 -72 46 -29 47 -29 54 -9 8 22 -15 80 -31 80 -13 0 -101 80 -101 92 0 6 6 5 15 -2 13 -11 15 -8 15 14 0 15 8 41 17 59 11 20 16 49 14 78 -1 29 2 49 11 56 23 19 250 133 265 133 7 0 -2 -14 -22 -31 -51 -45 -68 -81 -53 -114 6 -14 15 -25 20 -25 18 0 58 33 58 48 0 8 20 34 44 57 42 41 104 66 158 64 13 0 0 -6 -28 -13 -28 -7 -66 -21 -85 -32 -40 -23 -79 -78 -79 -109 0 -35 37 -75 69 -75 56 0 92 68 55 104 -22 22 -31 20 -11 -2 23 -26 21 -58 -5 -76 -29 -21 -51 -20 -71 2 -23 25 -21 74 3 105 27 34 93 64 155 70 28 3 42 3 32 0 -26 -7 -10 -23 24 -23 16 0 29 -4 29 -10 0 -5 -6 -10 -13 -10 -22 0 -57 -44 -57 -73 0 -25 31 -58 55 -57 5 1 -2 8 -17 16 -29 15 -35 41 -18 74 13 25 82 43 132 35 35 -6 37 -8 22 -20 -16 -12 -16 -13 4 -24 11 -6 28 -11 38 -11 16 0 16 -2 -2 -21 -22 -25 -9 -53 27 -56 l24 -2 -24 7 c-31 10 -36 25 -16 46 23 23 53 20 112 -9 62 -31 86 -55 55 -55 -27 0 -38 -18 -16 -27 25 -9 54 -40 54 -57 0 -7 7 -27 15 -42 l15 -29 0 48 c0 146 -193 296 -468 364 -99 24 -291 22 -412 -6 -52 -11 -95 -21 -97 -21 -2 0 -3 7 -3 16 0 8 -13 29 -29 45 -25 24 -38 29 -79 29 -82 0 -130 -57 -119 -140 l5 -40 -71 -23 c-99 -31 -278 -32 -322 -2 l-30 20 25 3 c71 8 93 16 127 45 41 36 73 98 73 142 0 74 -70 160 -149 184 -56 16 -90 14 -147 -13z m187 -61 c38 -25 69 -77 69 -117 -1 -39 -36 -104 -70 -128 -17 -12 -52 -25 -77 -28 -58 -6 -73 11 -73 86 0 64 -11 87 -50 107 -29 15 -31 15 -40 -10 -16 -42 -12 -117 8 -155 10 -19 40 -50 66 -67 51 -35 54 -43 7 -19 -38 20 -89 80 -97 114 -3 15 -7 33 -10 40 -9 29 19 112 49 147 59 67 144 79 218 30z m491 -162 c34 -30 19 -53 -52 -80 -36 -14 -74 -25 -85 -26 -44 -4 -24 91 24 118 32 18 86 13 113 -12z m298 -47 c-36 -12 -94 -38 -130 -56 -41 -20 -59 -26 -51 -16 23 28 92 64 151 80 84 23 103 18 30 -8z m-249 -61 c-34 -25 -61 -50 -61 -56 0 -12 -85 -7 -98 5 -11 12 21 26 61 26 27 0 45 7 62 24 21 21 64 43 89 45 4 1 -19 -19 -53 -44z m-61 -5 c-8 -5 -22 -10 -30 -10 -13 0 -13 1 0 10 8 5 22 10 30 10 13 0 13 -1 0 -10z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9550 12432 c-8 -3 -23 -11 -32 -19 -14 -12 -23 -13 -48 -5 -17 6 -38 8 -48 5 -31 -11 -62 -46 -62 -70 0 -18 -6 -23 -24 -23 -38 0 -56 -10 -72 -42 -16 -31 -12 -62 13 -89 13 -15 11 -20 -11 -42 -36 -36 -36 -88 0 -116 37 -29 68 -28 61 2 -36 144 15 271 130 324 47 22 65 25 125 21 84 -6 140 -40 177 -108 48 -87 23 -215 -52 -260 -44 -27 -131 -27 -175 0 -42 26 -66 81 -59 134 11 78 97 121 150 75 39 -35 43 -68 13 -112 l-25 -37 32 0 c86 1 112 105 37 148 -16 9 -30 22 -30 29 0 18 -50 53 -75 53 -12 0 -34 -9 -48 -20 -14 -11 -35 -20 -47 -20 -34 0 -61 -19 -76 -56 -13 -30 -12 -38 3 -71 9 -21 16 -54 15 -73 -3 -52 41 -95 91 -89 14 2 34 -9 54 -29 17 -18 38 -32 47 -32 30 0 67 20 77 43 8 19 16 22 45 19 49 -6 84 27 84 79 0 20 -7 42 -15 49 -13 11 -12 15 9 31 13 10 26 30 28 43 7 36 -17 84 -45 91 -21 6 -24 12 -23 52 1 60 -29 87 -91 80 -32 -3 -46 0 -58 13 -17 19 -52 29 -75 22z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10180 12423 c-8 -3 -23 -12 -32 -20 -12 -11 -21 -12 -37 -4 -50 27 -101 8 -130 -47 -11 -20 -20 -29 -21 -20 -1 42 -93 76 -120 43 -16 -19 -8 -51 12 -47 31 5 41 -27 46 -141 l5 -112 13 53 c26 99 83 185 146 218 15 8 47 14 71 14 85 0 130 -87 88 -172 -28 -58 -93 -120 -166 -158 -45 -23 -52 -29 -30 -26 17 3 62 10 102 16 81 13 109 8 118 -21 8 -24 43 -22 59 4 17 27 -21 90 -57 97 l-29 5 30 22 c44 32 55 73 32 118 -14 28 -16 41 -8 63 16 41 2 80 -35 102 -34 21 -34 21 -57 13z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1084 12390 c-12 -4 -30 -19 -40 -32 -14 -17 -27 -22 -51 -20 -25 2 -39 -3 -59 -23 -23 -23 -26 -32 -21 -68 5 -35 2 -44 -19 -64 -36 -33 -34 -95 5 -124 26 -19 27 -24 18 -49 -22 -58 36 -121 95 -104 27 8 35 6 54 -13 31 -31 78 -30 109 2 14 13 25 31 25 40 0 10 10 15 30 15 57 0 100 72 71 119 -5 8 -3 27 5 47 12 29 12 39 0 68 -17 41 -28 48 -91 59 -27 4 -65 10 -83 14 -36 6 -66 -13 -78 -51 -4 -11 -20 -33 -35 -47 -67 -62 -1 -166 84 -133 11 4 8 12 -14 34 -86 85 33 192 123 111 31 -27 33 -34 33 -91 0 -58 -2 -63 -37 -95 -63 -58 -162 -59 -219 -2 -42 42 -60 88 -60 152 0 84 41 150 121 191 52 26 163 25 215 -3 87 -46 139 -136 139 -240 1 -71 15 -81 55 -39 33 36 26 93 -15 121 -28 19 -30 23 -18 40 15 20 18 53 8 80 -9 23 -62 48 -90 41 -18 -5 -24 -2 -24 9 0 9 -11 27 -25 40 -28 28 -70 32 -102 10 -19 -13 -24 -13 -50 0 -32 17 -31 17 -59 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M351 12286 c11 -23 59 -43 59 -24 0 24 -23 48 -45 48 -22 0 -24 -2 -14 -24z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M767 12284 c-17 -9 -30 -26 -34 -45 l-6 -30 -28 34 c-35 43 -69 50 -116 26 -25 -13 -40 -16 -47 -9 -6 6 -25 10 -43 10 -66 0 -109 -84 -67 -131 13 -15 14 -23 3 -52 -18 -50 1 -90 54 -116 30 -14 36 -20 21 -21 -45 -1 -84 -91 -50 -119 22 -18 50 -10 54 16 4 30 53 43 162 44 l85 0 -63 18 c-177 51 -273 188 -196 280 73 88 227 16 303 -142 35 -71 36 -66 16 54 -16 100 -13 122 21 138 28 12 30 24 8 45 -19 20 -41 20 -77 0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10045 12207 c-54 -29 -62 -37 -82 -87 -12 -30 -25 -68 -29 -83 l-7 -29 44 22 c87 44 105 63 123 136 9 36 15 68 14 70 -2 1 -30 -12 -63 -29z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M622 12038 c33 -62 34 -63 111 -92 42 -16 80 -26 83 -23 4 3 -11 37 -34 74 l-40 68 -68 18 c-38 9 -73 17 -77 17 -4 0 7 -28 25 -62z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1822 12044 c10 -10 20 -16 22 -13 3 3 -5 11 -17 18 -21 13 -21 12 -5 -5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1351 11938 c-37 -46 -123 -98 -203 -123 l-73 -23 39 -17 c24 -10 49 -14 65 -10 30 7 71 43 71 60 0 7 21 15 48 19 26 4 55 13 64 20 21 16 34 68 22 89 -7 11 -14 8 -33 -15z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9834 11950 c-38 -17 -43 -23 -53 -71 -6 -28 -10 -53 -9 -54 2 -2 26 6 54 16 42 16 53 25 57 48 3 16 9 40 13 55 8 31 -3 32 -62 6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10103 11960 c-12 -5 -29 -20 -38 -33 -14 -22 -19 -24 -44 -14 -42 16 -79 2 -98 -38 -13 -28 -14 -39 -5 -60 10 -21 8 -28 -13 -49 -33 -33 -33 -79 0 -111 13 -14 31 -25 40 -25 10 0 15 -10 15 -30 0 -20 9 -40 26 -56 21 -22 31 -25 62 -20 46 7 48 7 95 0 42 -7 81 8 93 35 4 9 11 36 16 61 22 106 21 110 -3 136 -12 13 -29 24 -37 24 -8 0 -27 14 -42 30 -64 68 -168 3 -134 -84 5 -12 11 -9 31 14 19 23 33 30 61 30 43 0 55 -7 71 -37 28 -53 4 -114 -55 -139 -73 -31 -142 -3 -174 69 -40 87 -17 164 62 210 61 36 106 42 170 23 117 -34 181 -162 144 -288 -32 -109 -128 -179 -251 -182 -52 -1 -65 -4 -65 -17 0 -26 44 -59 79 -59 32 0 81 36 81 60 0 7 9 5 22 -4 34 -24 66 -19 100 14 24 25 29 37 25 59 -5 25 -2 31 22 41 46 19 64 77 36 117 -13 18 -13 24 1 51 13 27 13 35 0 65 -8 19 -23 38 -33 41 -15 5 -18 13 -15 39 2 22 -3 41 -19 61 -21 26 -26 28 -71 23 -38 -5 -50 -3 -55 9 -5 14 -54 45 -70 43 -4 0 -18 -4 -30 -9z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9360 11946 c0 -23 20 -70 33 -78 7 -4 38 -8 70 -8 31 0 57 -4 57 -10 0 -20 45 -50 74 -50 17 0 47 10 66 22 l35 21 -80 12 c-90 14 -135 30 -199 74 -51 35 -56 37 -56 17z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M865 11869 c25 -78 33 -87 86 -98 29 -6 54 -10 56 -8 2 2 -5 25 -14 52 -19 49 -30 57 -96 69 -37 7 -38 6 -32 -15z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M608 11828 c-15 -5 -33 -23 -40 -39 -11 -25 -17 -29 -40 -24 -59 13 -107 -38 -95 -102 3 -18 -2 -36 -14 -52 -25 -32 -25 -83 1 -106 14 -13 17 -22 10 -29 -5 -5 -10 -27 -10 -47 0 -29 6 -43 26 -58 15 -12 35 -21 45 -21 14 0 19 -7 19 -27 1 -69 78 -101 131 -56 15 12 20 11 42 -11 48 -48 137 -21 137 42 0 26 4 25 -59 11 -103 -22 -226 30 -277 117 -40 68 -44 155 -11 228 59 129 226 164 327 67 87 -84 48 -235 -66 -257 -76 -14 -135 29 -137 100 -2 74 82 108 138 56 l25 -23 0 32 c0 45 -14 67 -51 80 -40 14 -78 -3 -97 -42 -7 -15 -19 -27 -27 -27 -19 0 -55 -49 -55 -75 0 -12 9 -34 20 -48 11 -14 20 -36 20 -50 0 -60 74 -98 133 -68 21 11 48 16 70 13 51 -6 91 34 85 84 -3 28 0 38 16 46 55 29 61 86 16 128 -23 21 -30 37 -30 64 0 49 -28 76 -79 76 -22 0 -44 -6 -51 -15 -10 -12 -15 -11 -33 10 -27 29 -54 36 -89 23z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9705 11777 c-37 -24 -54 -44 -72 -84 -12 -29 -19 -53 -15 -53 4 0 29 15 56 33 38 25 53 43 67 81 10 28 17 51 16 53 -2 1 -25 -12 -52 -30z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1051 11699 c25 -39 43 -56 83 -73 28 -13 53 -22 54 -20 2 1 -9 25 -24 53 -24 43 -36 53 -82 70 -30 12 -56 21 -58 21 -2 0 10 -23 27 -51z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9785 11716 c-22 -51 -10 -94 32 -121 25 -16 32 -29 37 -66 9 -65 55 -100 107 -81 l23 9 -22 12 c-41 22 -106 121 -134 205 l-26 81 -17 -39z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M980 11638 c0 -80 -34 -175 -87 -246 -14 -18 -22 -36 -19 -39 3 -4 24 -1 45 6 32 9 42 18 51 47 7 20 10 48 7 63 -5 22 0 33 24 53 21 19 29 35 29 60 0 29 -31 98 -45 98 -3 0 -5 -19 -5 -42z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9874 11381 c3 -4 20 -14 38 -22 35 -14 78 -55 78 -72 0 -21 18 8 22 33 3 23 5 21 35 -24 54 -81 55 -147 3 -154 -20 -3 -22 0 -18 23 4 17 2 23 -4 17 -6 -6 -8 -18 -6 -28 4 -22 45 -31 61 -15 8 8 14 2 23 -19 14 -33 34 -40 35 -12 1 35 18 -21 18 -63 1 -50 -16 -85 -52 -105 -27 -14 -29 -14 -48 9 -15 18 -19 19 -19 7 0 -9 11 -22 25 -28 37 -17 72 3 95 55 19 41 20 41 20 12 0 -16 3 -41 7 -55 l7 -25 8 25 c5 15 6 4 2 -30 -10 -110 -80 -193 -147 -176 -52 13 -56 80 -6 106 16 9 26 8 47 -5 l27 -16 -24 21 c-27 23 -56 19 -83 -12 -40 -46 -7 -108 58 -108 67 0 113 51 141 155 l13 50 -5 -48 c-7 -69 -38 -123 -92 -157 -25 -16 -52 -39 -61 -51 -14 -20 -14 -23 3 -35 10 -8 25 -14 32 -14 25 0 70 28 97 60 42 50 31 14 -36 -119 -69 -134 -84 -149 -144 -132 -25 7 -36 6 -45 -5 -6 -8 -29 -19 -50 -26 -31 -9 -37 -14 -28 -25 9 -10 8 -13 -1 -13 -13 0 -47 34 -98 98 -25 32 -40 42 -63 42 -45 0 -35 -36 30 -103 43 -45 120 -71 184 -63 l42 5 -39 -11 c-88 -24 -206 36 -247 126 -21 46 -25 139 -8 183 36 96 162 137 248 80 101 -67 99 -228 -3 -273 -26 -11 -27 -13 -9 -14 12 0 36 12 54 27 63 53 76 135 34 219 -52 105 -164 139 -275 84 -78 -40 -114 -106 -114 -210 0 -176 121 -290 293 -278 40 3 83 14 109 27 l42 21 0 -22 c0 -13 9 -37 19 -54 19 -31 19 -32 -1 -75 -67 -149 -91 -333 -64 -488 15 -87 33 -144 145 -461 23 -66 43 -144 47 -180 6 -74 35 -180 48 -180 16 0 -4 130 -34 223 -16 50 -28 93 -26 95 5 4 60 -138 75 -193 36 -132 -23 -232 -129 -222 -34 4 -51 12 -73 37 -26 30 -29 38 -25 87 5 61 37 103 91 121 21 6 25 10 13 11 -34 2 -101 -38 -121 -71 -28 -47 -27 -133 2 -174 29 -41 79 -64 138 -64 53 0 88 16 127 57 37 39 48 73 48 149 0 85 -22 147 -135 384 -81 170 -145 324 -145 349 0 4 18 -9 40 -30 109 -104 296 -80 375 46 25 40 30 59 30 110 0 152 -141 248 -271 185 -59 -29 -99 -90 -99 -152 0 -26 -4 -48 -8 -48 -4 0 -17 21 -29 47 -18 40 -20 60 -15 142 3 57 14 124 27 165 21 68 22 68 54 63 48 -8 84 3 115 34 58 57 45 153 -24 186 -25 12 -34 22 -30 33 36 113 52 304 35 415 -15 101 -61 242 -106 322 -48 86 -129 171 -189 200 -49 22 -122 32 -111 14z m372 -745 c-13 -51 -73 -162 -82 -153 -2 2 13 42 35 88 21 46 42 100 47 119 4 20 9 28 11 18 2 -9 -2 -41 -11 -72z m-36 -201 c-6 -15 -22 -41 -35 -57 -17 -20 -25 -42 -25 -66 0 -20 -4 -44 -10 -52 -7 -11 -11 -9 -19 13 -18 48 -13 71 25 108 20 18 42 47 51 62 18 36 27 30 13 -8z m70 -65 c63 -63 22 -160 -68 -160 -50 0 -50 -10 -6 108 28 76 41 85 74 52z m-102 -32 c-6 -18 -13 -27 -15 -21 -4 11 13 53 22 53 2 0 -1 -15 -7 -32z m248 -441 c84 -91 61 -213 -49 -266 -90 -44 -196 -15 -248 67 -16 25 -29 51 -29 56 1 6 8 -2 17 -19 48 -92 143 -135 232 -104 38 13 39 20 3 60 -25 28 -35 31 -97 35 -38 3 -73 10 -78 17 -13 20 -1 97 20 126 11 14 35 37 54 49 28 20 43 23 88 19 47 -3 59 -9 87 -40z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M945 11290 c-53 -12 -90 -37 -149 -100 -166 -180 -236 -484 -176 -770 24 -115 24 -110 4 -110 -8 0 -29 -13 -45 -29 -23 -23 -29 -38 -29 -71 0 -84 57 -135 143 -128 38 3 40 2 54 -37 24 -70 44 -207 37 -262 -3 -28 -17 -68 -30 -90 l-23 -38 -1 50 c0 70 -38 127 -104 160 -58 29 -92 31 -144 10 -79 -34 -125 -106 -125 -197 0 -116 90 -205 217 -215 83 -7 140 13 195 69 23 22 41 38 41 35 0 -23 -68 -185 -150 -357 -108 -227 -140 -317 -140 -394 1 -158 150 -253 276 -175 112 68 63 282 -63 278 l-28 -1 32 -9 c17 -5 43 -23 57 -40 21 -25 26 -41 26 -86 0 -47 -4 -58 -30 -85 -29 -28 -35 -30 -87 -26 -47 4 -61 10 -84 35 -36 42 -44 94 -25 177 15 63 75 221 81 214 2 -2 -11 -43 -27 -93 -22 -63 -32 -114 -34 -170 l-4 -80 19 55 c10 30 23 92 29 138 6 46 25 120 41 165 16 45 52 146 79 223 28 78 58 179 66 224 31 162 16 324 -46 483 -20 52 -27 82 -20 90 5 7 15 28 21 48 l11 35 68 -23 c194 -68 372 62 372 272 0 71 -41 150 -98 189 -58 41 -149 48 -211 17 -51 -26 -97 -95 -107 -157 -11 -75 45 -161 116 -178 18 -5 15 -2 -10 11 -77 40 -103 137 -57 217 30 54 67 78 124 83 118 12 207 -91 188 -216 -13 -86 -65 -155 -142 -188 -35 -14 -126 -16 -158 -3 -12 4 5 6 41 3 36 -3 76 0 98 7 48 16 102 63 126 111 19 37 19 38 1 44 -28 9 -63 -12 -91 -53 -14 -20 -36 -47 -49 -59 -26 -25 -51 -32 -32 -9 9 11 4 15 -28 20 -21 3 -44 13 -51 21 -9 11 -22 14 -46 9 -68 -13 -79 -3 -143 124 -32 64 -62 128 -66 142 -6 21 -2 20 25 -13 44 -52 82 -70 115 -55 43 20 26 51 -55 101 -39 25 -75 90 -84 152 -4 34 -2 31 14 -18 23 -73 43 -103 83 -127 41 -25 68 -25 101 1 32 25 35 70 6 99 -26 26 -62 25 -86 -2 -19 -23 -19 -23 2 -5 27 22 57 22 77 -1 21 -23 22 -56 1 -76 -20 -21 -73 -20 -103 0 -32 23 -71 111 -70 159 0 31 2 36 9 20 7 -16 9 -14 9 15 1 36 21 82 21 49 0 -30 40 -69 69 -69 50 0 79 53 44 81 -15 13 -15 12 -2 -9 18 -28 3 -56 -33 -60 -47 -6 -82 66 -69 144 5 30 8 35 14 20 6 -15 10 -16 22 -6 8 7 15 23 15 36 0 23 1 24 24 9 23 -16 56 -11 56 7 0 6 -7 5 -16 -2 -13 -11 -18 -10 -35 7 -16 16 -19 27 -14 56 8 41 59 127 75 127 6 0 9 -4 6 -9 -8 -12 3 -41 15 -41 5 0 9 9 9 20 0 11 6 20 14 20 8 0 16 7 20 15 3 8 14 15 25 15 11 0 23 5 26 10 3 6 16 10 27 10 12 0 19 2 17 4 -11 9 -57 13 -84 6z m-252 -832 c20 -43 34 -78 31 -78 -15 0 -76 116 -88 170 -21 86 -19 109 3 40 10 -30 34 -90 54 -132z m40 -164 c38 -43 49 -91 27 -124 -9 -13 -11 -13 -20 0 -5 8 -10 31 -10 51 0 25 -9 48 -30 74 -16 21 -30 41 -30 46 0 4 -3 16 -6 26 -3 12 1 10 13 -7 10 -14 35 -44 56 -66z m-50 -86 c27 -70 31 -88 20 -93 -79 -30 -157 59 -119 134 13 25 53 55 63 47 0 0 17 -40 36 -88z m36 29 c0 -21 -1 -21 -9 -2 -12 28 -12 37 0 30 6 -3 10 -16 9 -28z m-80 -414 c44 -33 71 -82 71 -129 0 -52 -16 -64 -85 -64 -58 0 -103 -23 -111 -56 -8 -32 -4 -35 50 -41 75 -9 113 4 162 53 25 24 41 36 35 27 -13 -24 -60 -68 -90 -83 -14 -7 -48 -12 -77 -12 -184 2 -253 208 -104 310 42 28 106 26 149 -5z m142 -170 c-12 -20 -14 -14 -5 12 4 9 9 14 11 11 3 -2 0 -13 -6 -23z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10049 11003 c-13 -16 -12 -17 4 -4 16 13 21 21 13 21 -2 0 -10 -8 -17 -17z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M626 4266 c-57 -21 -94 -63 -112 -125 -29 -97 -3 -188 129 -461 76 -155 128 -280 141 -334 l7 -28 -34 36 c-89 94 -239 102 -337 18 -55 -46 -80 -98 -80 -165 0 -149 148 -250 270 -185 66 36 102 92 102 159 l0 52 19 -24 c45 -60 49 -180 9 -327 l-21 -78 -59 1 c-53 0 -63 -3 -91 -31 -59 -59 -46 -160 25 -189 l33 -14 -20 -73 c-31 -113 -30 -364 1 -473 60 -209 188 -386 303 -419 40 -12 63 -14 80 -7 23 9 23 10 2 10 -12 1 -25 5 -28 11 -3 5 -15 10 -26 10 -11 0 -22 7 -25 15 -4 8 -12 15 -20 15 -8 0 -14 9 -14 20 0 11 -4 20 -10 20 -5 0 -10 -11 -10 -25 0 -29 -8 -32 -27 -7 -66 84 -71 197 -7 176 17 -5 18 -5 2 6 -13 8 -23 8 -38 0 -18 -10 -22 -7 -31 19 -13 36 -17 37 -36 14 -12 -16 -14 -9 -11 54 4 79 23 113 63 113 25 0 40 -15 48 -45 4 -19 5 -18 6 2 1 26 -23 53 -49 53 -35 0 -52 -13 -71 -54 l-18 -40 -7 54 c-7 50 -9 52 -15 25 l-7 -30 -1 36 c-4 125 91 231 170 189 23 -13 26 -62 3 -84 -19 -19 -55 -21 -74 -4 -12 11 -12 10 -1 -4 40 -53 128 14 99 76 -21 48 -79 55 -137 17 -27 -17 -70 -102 -72 -141 -1 -19 -2 -21 -6 -6 -14 55 54 167 110 181 20 5 66 62 55 69 -1 1 -15 7 -29 13 -35 15 -83 -9 -121 -61 -44 -60 -29 -16 45 132 66 131 77 141 137 128 21 -4 40 1 63 14 17 11 43 20 56 20 20 0 21 2 11 15 -10 12 -10 15 0 15 7 0 27 -16 44 -36 92 -106 104 -115 135 -95 12 8 12 14 -4 38 -51 80 -101 113 -190 123 l-60 7 55 1 c129 3 230 -100 230 -235 0 -58 -19 -102 -63 -140 -85 -74 -208 -50 -256 50 -39 82 -18 162 55 205 26 16 31 21 14 16 -39 -11 -68 -33 -91 -71 -31 -49 -24 -145 14 -200 89 -128 290 -105 358 42 13 27 19 63 19 112 0 138 -85 246 -215 273 -60 13 -131 3 -185 -25 -35 -18 -40 -18 -40 -3 0 6 -9 30 -20 53 l-20 42 25 58 c43 97 65 208 65 330 0 137 -22 236 -90 421 -79 213 -100 280 -110 363 -11 77 -37 181 -47 181 -15 0 9 -155 36 -240 16 -52 29 -96 27 -97 -2 -2 -20 40 -41 94 -81 210 -50 333 84 333 74 0 124 -69 107 -147 -10 -42 -37 -72 -81 -88 -36 -13 -37 -14 -12 -15 15 0 41 7 58 15 93 49 94 221 0 269 -44 23 -101 28 -145 12z m44 -916 c39 -20 99 -94 86 -107 -3 -3 -6 -1 -6 5 0 20 -64 85 -97 98 -34 15 -102 18 -140 8 -31 -8 -29 -30 6 -65 24 -24 38 -29 78 -29 72 0 91 -8 95 -39 13 -102 -91 -201 -186 -177 -62 15 -116 91 -116 161 0 60 50 130 110 154 44 17 127 13 170 -9z m17 -578 c10 -6 6 -25 -16 -78 -15 -38 -31 -77 -34 -87 -6 -15 -10 -16 -29 -6 -13 7 -28 19 -35 28 -18 23 -16 83 3 109 25 36 82 53 111 34z m73 -113 c0 -8 -12 -26 -26 -40 -15 -13 -42 -46 -60 -74 -19 -27 -34 -47 -34 -44 0 22 27 78 48 101 16 18 25 40 27 66 3 58 16 73 31 37 7 -17 13 -37 14 -46z m-50 3 c0 -5 -7 -17 -16 -28 -8 -10 -14 -14 -11 -9 2 6 7 18 10 28 7 17 17 23 17 9z m177 -18 c-3 -3 -12 -4 -19 -1 -8 3 -5 6 6 6 11 1 17 -2 13 -5z m-203 -196 c-15 -29 -38 -82 -50 -118 -26 -73 -34 -45 -10 35 14 44 76 149 84 140 2 -1 -9 -27 -24 -57z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10084 4161 c-55 -33 -74 -67 -74 -130 0 -87 43 -143 121 -157 l34 -5 -42 19 c-23 11 -48 31 -57 44 -76 116 43 251 155 175 78 -53 80 -139 7 -330 -16 -43 -32 -77 -34 -75 -2 2 11 46 27 98 27 82 52 255 36 240 -14 -13 -38 -101 -43 -155 -7 -85 -27 -155 -94 -336 -70 -187 -97 -284 -110 -396 -15 -134 10 -289 70 -428 18 -43 18 -44 -1 -81 -10 -21 -19 -46 -19 -56 0 -17 -3 -17 -42 3 -60 31 -164 37 -225 14 -57 -22 -117 -75 -146 -129 -18 -34 -22 -58 -22 -137 0 -87 2 -99 27 -137 40 -60 106 -95 182 -96 74 -1 117 21 160 82 34 48 46 133 26 182 -16 39 -74 90 -103 90 -18 0 -16 -3 13 -18 74 -37 98 -116 61 -198 -34 -75 -111 -113 -186 -93 -93 25 -143 102 -132 203 13 131 98 210 227 210 36 0 74 -5 85 -12 18 -11 16 -11 -10 -5 -110 28 -219 -17 -266 -109 -24 -48 -24 -48 11 -48 32 0 51 15 90 72 13 20 38 44 55 54 27 16 29 16 16 1 -11 -15 -11 -17 1 -17 8 0 35 -10 60 -23 30 -15 53 -21 66 -16 11 4 33 4 49 0 24 -6 38 -27 96 -140 37 -73 67 -137 67 -142 0 -5 -22 14 -48 41 -49 51 -75 60 -113 40 -18 -10 -18 -13 -5 -39 8 -15 28 -34 44 -40 61 -26 113 -107 111 -173 -1 -31 -2 -31 -9 9 -19 95 -77 156 -143 151 -55 -4 -86 -43 -68 -86 7 -16 24 -34 37 -41 39 -17 42 -13 6 9 -28 17 -33 25 -30 52 2 23 11 37 31 48 25 14 30 13 64 -5 51 -27 82 -86 88 -166 3 -42 2 -53 -3 -34 -8 28 -9 26 -17 -25 -8 -53 -8 -54 -17 -23 -9 34 -50 73 -78 73 -42 0 -66 -66 -32 -91 14 -11 15 -11 5 1 -20 21 -15 58 7 70 29 15 58 4 75 -30 17 -32 21 -140 5 -140 -5 0 -10 5 -10 10 0 22 -22 8 -31 -20 -9 -26 -13 -28 -30 -17 -21 13 -50 2 -57 -24 -2 -8 2 -6 10 5 21 27 52 17 56 -19 5 -43 -13 -95 -47 -135 l-30 -35 -1 33 c0 17 -4 32 -10 32 -5 0 -10 -9 -10 -20 0 -11 -6 -20 -14 -20 -8 0 -18 -9 -21 -20 -4 -11 -10 -18 -15 -15 -10 6 -70 -21 -70 -32 0 -3 23 -3 52 0 131 16 262 178 335 414 25 81 27 102 26 248 0 126 -4 176 -20 237 l-20 77 28 10 c35 12 69 65 69 106 0 37 -31 89 -62 106 -13 7 -46 12 -75 12 l-52 -1 -15 51 c-49 175 -47 289 5 349 20 23 20 23 14 1 -17 -61 52 -171 122 -194 56 -18 128 -7 171 28 141 112 92 327 -87 379 -91 27 -170 6 -243 -64 -21 -20 -38 -33 -38 -30 0 24 67 185 156 374 140 298 158 387 101 489 -43 77 -161 110 -233 66z m272 -900 c89 -41 126 -139 85 -225 -64 -131 -242 -109 -281 34 -7 25 -7 47 0 64 8 23 15 26 60 26 60 0 114 20 129 48 17 31 14 39 -20 51 -76 26 -159 -2 -208 -70 -17 -23 -31 -38 -31 -32 0 18 74 96 104 109 44 19 114 17 162 -5z m-91 -606 c19 -18 25 -35 25 -65 0 -30 -6 -47 -25 -65 -13 -14 -30 -25 -37 -25 -13 0 -79 166 -70 175 3 3 23 5 44 5 28 0 46 -7 63 -25z m-120 -72 c14 -31 23 -58 21 -61 -3 -2 -12 11 -20 29 -8 19 -15 28 -15 21 -1 -17 16 -51 39 -77 15 -17 44 -85 36 -85 -1 0 -20 25 -41 55 -21 31 -46 60 -57 66 -10 5 -18 18 -18 28 0 20 20 81 26 81 2 0 16 -25 29 -57z m33 -216 c30 -43 62 -133 61 -171 0 -12 -10 6 -23 39 -19 49 -51 122 -74 168 -2 4 -1 7 2 7 3 0 18 -19 34 -43z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10079 2053 c-13 -16 -12 -17 4 -4 16 13 21 21 13 21 -2 0 -10 -8 -17 -17z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M836 1813 c-6 -14 -5 -15 5 -6 7 7 10 15 7 18 -3 3 -9 -2 -12 -12z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666 1629 c-14 -17 -26 -25 -26 -19 0 19 -66 41 -94 31 -30 -12 -56 -48 -56 -78 0 -17 -6 -23 -20 -23 -48 0 -87 -77 -61 -119 7 -10 3 -23 -10 -39 -26 -34 -24 -78 5 -107 15 -15 20 -28 15 -37 -17 -26 -9 -60 21 -90 25 -25 37 -30 63 -25 28 4 35 1 49 -24 30 -51 100 -58 132 -13 10 13 16 13 45 1 18 -8 44 -12 57 -9 36 7 67 50 61 86 -3 23 2 35 24 54 41 34 40 84 -1 122 -21 20 -30 37 -30 59 0 21 -9 41 -26 58 -21 21 -31 24 -64 19 -27 -4 -41 -2 -50 9 -8 9 -30 15 -55 15 -36 0 -48 -5 -69 -31 -14 -17 -26 -38 -26 -48 0 -9 -9 -34 -19 -55 -24 -46 -13 -89 29 -111 16 -8 31 -24 35 -35 9 -28 59 -52 90 -44 31 8 65 49 65 79 0 34 -10 36 -43 9 -53 -44 -127 -13 -127 53 0 78 53 121 133 109 134 -20 160 -212 38 -284 -37 -21 -58 -27 -106 -27 -99 1 -174 58 -201 153 -54 185 108 349 307 312 29 -6 54 -8 57 -5 9 8 -21 66 -39 75 -36 20 -76 11 -103 -21z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M850 1535 c0 -3 16 -25 35 -50 41 -54 75 -157 75 -227 0 -46 2 -49 17 -37 45 38 49 115 7 148 -19 15 -24 28 -24 66 0 59 -12 80 -51 94 -34 12 -59 14 -59 6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10035 1515 c-41 -40 -33 -51 38 -52 186 -2 311 -167 252 -332 -49 -141 -207 -193 -324 -107 -52 39 -66 65 -66 127 0 110 80 179 174 150 51 -15 81 -53 81 -101 0 -54 -26 -82 -75 -82 -32 0 -45 6 -66 32 -22 26 -28 28 -33 15 -12 -33 -5 -66 19 -90 34 -35 78 -33 117 5 16 17 36 30 44 30 28 0 54 39 54 79 0 22 -4 43 -10 46 -5 3 -10 24 -10 46 0 54 -34 89 -88 89 -21 0 -43 -5 -49 -11 -8 -8 -17 -8 -31 0 -11 6 -30 11 -42 11 -29 0 -80 -53 -80 -82 0 -16 -9 -27 -29 -36 -40 -17 -58 -62 -41 -102 7 -17 19 -34 27 -38 11 -7 12 -14 4 -35 -12 -31 -6 -53 22 -84 21 -24 80 -32 92 -13 9 14 25 12 25 -3 0 -25 40 -51 77 -51 26 0 42 7 58 26 19 23 28 25 67 21 58 -7 88 19 88 73 0 27 7 43 30 64 34 31 38 64 14 98 -15 21 -15 25 0 41 24 27 20 78 -9 106 -13 14 -30 25 -38 25 -9 0 -12 10 -9 34 7 62 -64 105 -120 73 -23 -13 -28 -13 -28 -2 0 21 -50 55 -82 55 -17 0 -39 -10 -53 -25z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9892 1443 c-29 -6 -49 -37 -58 -90 -4 -24 -11 -43 -16 -43 -5 0 -20 -11 -33 -25 -29 -28 -33 -84 -10 -125 15 -27 13 -29 35 50 19 69 47 119 103 177 27 29 45 53 39 53 -6 0 -16 2 -24 4 -7 2 -23 1 -36 -1z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8352 1292 c-71 -26 -121 -68 -154 -132 -36 -67 -39 -170 -8 -239 24 -52 25 -61 4 -61 -9 0 -32 -8 -51 -17 -30 -14 -40 -15 -67 -4 -282 115 -457 107 -845 -38 -162 -61 -273 -91 -338 -91 -21 -1 -63 -9 -93 -20 -51 -17 -53 -19 -28 -25 33 -9 167 18 256 50 107 39 83 21 -32 -24 -173 -68 -270 -64 -316 11 -36 59 -18 142 37 167 69 32 151 2 179 -66 17 -40 27 -43 18 -5 -12 49 -38 82 -79 102 -113 54 -225 -14 -225 -137 0 -60 15 -95 57 -135 38 -36 73 -48 142 -48 83 0 141 20 379 132 303 141 412 180 342 122 -124 -105 -95 -325 52 -398 85 -42 162 -30 234 36 50 46 68 92 61 154 -9 85 -78 151 -169 163 l-53 8 45 21 c61 29 175 29 290 -2 84 -22 85 -22 82 -52 -4 -52 8 -93 39 -124 26 -25 38 -30 78 -30 54 0 96 25 112 67 5 14 15 23 22 20 59 -22 197 -41 307 -41 154 1 251 23 395 94 110 54 192 119 230 184 26 45 45 136 28 136 -10 0 -33 -43 -33 -60 0 -14 -32 -45 -56 -54 -17 -8 -16 -10 10 -21 l29 -12 -42 -31 c-73 -53 -151 -55 -151 -5 0 22 4 25 26 20 16 -3 22 -1 16 5 -29 29 -69 -24 -43 -56 9 -11 5 -15 -19 -19 -32 -7 -42 -36 -12 -38 9 0 4 -5 -13 -10 -93 -30 -204 41 -149 95 8 9 11 16 4 16 -6 0 -16 -11 -22 -25 -14 -32 2 -71 37 -87 31 -14 32 -28 3 -28 -13 0 -30 -5 -38 -10 -12 -8 -12 -10 5 -11 11 0 15 -3 8 -5 -19 -8 -132 24 -163 46 -55 39 -64 119 -15 142 19 9 29 7 50 -6 30 -20 35 -69 8 -85 -10 -6 -13 -11 -7 -11 36 -1 46 68 14 100 -43 43 -111 12 -113 -53 -2 -65 55 -117 157 -144 l51 -13 -48 5 c-81 8 -137 45 -171 113 -16 31 -60 62 -71 50 -3 -3 -8 -21 -12 -40 -5 -32 0 -40 39 -82 25 -25 40 -46 34 -46 -5 0 -66 28 -134 63 -133 67 -149 83 -137 144 4 22 0 41 -15 65 -11 18 -20 44 -20 57 0 21 -2 22 -17 10 -15 -13 -15 -12 -4 9 7 13 35 39 62 59 53 38 69 59 69 92 0 27 -14 26 -66 -4 -81 -47 -118 -154 -91 -260 6 -27 6 -28 -5 -10 -7 11 -13 52 -13 91 0 61 4 77 30 119 43 68 113 106 198 107 129 1 201 -79 184 -205 -7 -53 -65 -110 -128 -127 -37 -10 -50 -9 -88 7 -28 11 -55 32 -68 52 -13 20 -23 27 -23 18 0 -24 50 -78 87 -93 72 -31 163 -6 220 60 40 44 47 69 41 146 -11 150 -168 238 -326 182z m-748 -484 c-58 -41 -79 -84 -79 -159 0 -75 9 -91 42 -78 35 13 54 52 57 119 3 72 13 83 75 77 76 -8 131 -66 138 -144 10 -112 -112 -193 -221 -145 -91 41 -134 168 -87 259 20 39 75 93 96 93 5 0 -4 -10 -21 -22z m677 -14 c18 -20 47 -42 62 -51 16 -8 27 -17 24 -19 -8 -8 -59 16 -89 41 -20 17 -42 25 -66 25 -50 0 -71 14 -46 29 38 22 78 13 115 -25z m281 -89 c81 -27 65 -33 -27 -10 -52 14 -165 75 -165 90 0 3 27 -8 59 -25 33 -16 93 -41 133 -55z m-306 59 c19 -15 19 -15 -1 -6 -11 5 -27 12 -35 15 -13 5 -13 6 1 6 8 1 24 -6 35 -15z m-50 -26 c46 -17 84 -36 84 -40 0 -5 -13 -23 -29 -39 -47 -47 -117 -34 -146 27 -14 30 -12 84 3 84 3 0 43 -14 88 -32z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1122 1266 c-41 -17 -61 -34 -84 -70 -17 -26 -29 -49 -26 -52 7 -7 102 35 110 49 4 7 19 31 33 55 14 23 25 42 23 42 -2 -1 -27 -11 -56 -24z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2193 1259 c-56 -13 -127 -77 -149 -134 -25 -66 -16 -145 22 -193 98 -122 289 -102 320 34 4 22 0 18 -17 -16 -56 -106 -202 -101 -276 9 -49 72 -15 184 68 229 63 34 157 29 225 -13 65 -40 104 -114 103 -194 0 -31 -3 -64 -7 -73 -4 -10 -7 20 -7 66 0 73 -3 87 -27 124 -32 48 -116 102 -127 83 -15 -24 2 -62 38 -88 52 -38 91 -75 91 -86 0 -5 -7 -4 -15 3 -13 11 -15 8 -15 -16 0 -16 -9 -43 -19 -60 -14 -22 -18 -43 -15 -75 3 -24 1 -49 -3 -55 -9 -13 -213 -117 -253 -129 -24 -8 -24 -7 6 21 47 44 67 89 53 117 -6 12 -13 23 -14 25 -9 10 -64 -31 -69 -51 -14 -57 -115 -118 -191 -116 -21 0 -14 4 25 13 30 6 64 17 75 23 38 21 76 70 82 106 4 29 1 40 -20 61 -15 14 -35 26 -45 26 -28 0 -72 -38 -72 -61 0 -26 18 -59 31 -59 6 0 3 7 -5 16 -32 32 -9 87 37 87 66 0 79 -73 24 -128 -35 -35 -118 -66 -171 -64 l-31 1 30 7 30 7 -34 7 c-18 4 -45 7 -60 7 -22 1 -20 3 14 15 22 8 45 22 52 32 25 33 10 94 -22 93 -5 0 -2 -5 8 -11 10 -6 17 -22 17 -40 0 -22 -8 -34 -32 -49 -35 -21 -112 -27 -138 -10 -13 8 -12 10 3 10 9 0 17 4 17 10 0 15 -33 28 -99 39 -60 10 -116 36 -141 66 -10 12 -9 15 8 15 12 0 24 5 27 10 3 6 2 10 -3 10 -20 0 -58 48 -72 90 l-15 45 -3 -48 c-4 -62 34 -133 103 -194 62 -55 223 -135 330 -164 136 -38 411 -28 530 17 9 4 15 0 15 -9 0 -28 48 -74 84 -81 41 -8 92 11 121 44 15 17 20 36 20 81 l0 59 50 14 c144 42 253 48 321 17 53 -24 66 -43 24 -35 -70 15 -167 -54 -189 -133 -14 -51 -14 -67 5 -111 61 -148 250 -177 355 -53 86 100 78 257 -17 341 -19 16 -30 30 -24 30 28 0 155 -52 335 -138 110 -52 232 -105 270 -119 129 -44 249 -27 303 42 75 95 37 237 -70 265 -95 26 -199 -40 -197 -125 1 -30 1 -30 8 -4 21 68 61 99 126 99 71 0 114 -41 115 -108 1 -145 -149 -172 -371 -67 -60 28 -58 28 60 -9 94 -30 221 -46 221 -27 0 6 -10 11 -22 11 -13 1 -34 7 -48 15 -14 8 -47 15 -75 15 -74 1 -153 22 -336 91 -245 92 -328 111 -479 112 -132 1 -210 -14 -338 -67 -57 -23 -58 -23 -92 -4 -19 10 -43 18 -53 18 -14 0 -17 4 -12 18 5 9 17 42 28 72 46 130 -18 274 -147 331 -52 22 -139 30 -193 18z m344 -480 c26 -10 27 -11 10 -24 -10 -7 -27 -11 -38 -8 -22 6 -79 -15 -79 -29 0 -9 -61 -38 -81 -38 -7 0 8 13 32 29 24 17 55 41 68 55 27 28 45 32 88 15z m619 -41 c36 -39 47 -70 47 -128 0 -81 -46 -153 -116 -179 -89 -34 -199 29 -214 123 -12 76 60 162 145 173 55 7 72 -13 72 -85 0 -61 15 -93 52 -113 31 -17 48 12 48 78 0 62 -25 120 -67 152 -15 12 -19 18 -8 12 11 -5 30 -20 41 -33z m-831 -8 c-21 -34 -157 -91 -214 -89 -18 0 -9 6 29 18 30 10 84 32 120 49 77 36 73 35 65 22z m174 6 c-2 -2 -15 -9 -29 -15 -24 -11 -24 -11 -6 3 16 13 49 24 35 12z m106 -26 c27 -85 -78 -155 -149 -99 -45 35 -34 52 52 86 95 38 89 37 97 13z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9600 1242 c0 -5 9 -30 20 -54 14 -32 34 -55 67 -76 26 -17 49 -29 51 -27 7 7 -30 94 -47 108 -31 26 -91 59 -91 49z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M928 1118 c-44 -9 -47 -12 -66 -61 -11 -29 -18 -54 -17 -55 2 -2 28 2 57 8 52 12 55 14 71 60 9 26 17 50 17 54 0 7 1 7 -62 -6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1095 1111 l-40 -18 54 -12 c74 -16 163 -65 211 -117 22 -24 43 -44 45 -44 3 0 5 18 5 40 0 53 -25 77 -89 86 -42 5 -50 10 -56 31 -3 15 -18 30 -40 39 -42 17 -41 17 -90 -5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9518 1060 c-25 -26 -37 -30 -84 -30 -58 0 -79 -17 -86 -70 -4 -31 7 -29 64 9 51 35 121 59 203 69 l60 8 -35 22 c-49 31 -85 28 -122 -8z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M430 1046 c-14 -38 6 -85 43 -101 l30 -13 -24 -7 c-59 -18 -90 -76 -66 -124 12 -25 12 -30 -5 -50 -41 -51 -2 -131 64 -131 18 0 39 4 46 9 8 5 28 0 52 -11 34 -17 41 -18 72 -5 18 8 39 26 47 40 l14 26 16 -32 c21 -42 64 -63 97 -48 30 13 31 43 2 56 -20 9 -23 17 -23 65 1 30 4 82 8 115 l8 60 -25 -50 c-38 -75 -93 -135 -150 -161 -62 -29 -91 -30 -134 -4 -57 35 -67 97 -27 166 32 55 99 101 189 130 l71 23 -85 1 c-109 0 -158 13 -162 43 -5 33 -45 36 -58 3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9753 1054 c3 -11 9 -36 13 -57 6 -38 20 -49 93 -72 22 -7 23 -5 16 36 -10 62 -19 74 -62 88 -21 7 -44 15 -52 18 -9 4 -11 0 -8 -13z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1053 996 c-22 -18 -33 -22 -46 -14 -24 13 -71 1 -92 -22 -19 -21 -23 -60 -10 -97 5 -17 3 -23 -8 -23 -23 0 -47 -39 -47 -76 0 -24 8 -39 30 -58 27 -22 29 -28 20 -46 -15 -28 -3 -77 23 -95 12 -8 37 -15 55 -15 24 0 40 -7 53 -24 25 -32 62 -40 98 -22 25 13 31 13 47 1 11 -8 31 -15 45 -15 33 0 79 35 79 60 0 16 6 18 33 13 47 -7 87 27 87 73 0 20 -4 43 -10 53 -7 14 -4 21 15 31 13 7 29 26 36 41 19 47 -16 109 -63 109 -9 0 -12 -14 -10 -53 8 -121 -80 -242 -193 -268 -107 -24 -221 25 -264 113 -56 118 10 273 122 285 96 11 177 -49 177 -132 0 -57 -17 -93 -51 -111 -98 -50 -188 52 -109 126 33 31 30 40 -15 40 -71 0 -103 -85 -52 -138 15 -16 27 -34 27 -41 0 -26 48 -61 84 -61 19 0 38 5 41 10 3 6 23 10 44 10 74 0 119 67 88 130 -9 17 -11 32 -6 36 5 3 9 23 9 44 0 30 -6 43 -26 59 -15 12 -37 21 -51 21 -16 0 -27 8 -33 24 -11 30 -47 56 -76 56 -13 0 -35 -11 -51 -24z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9556 959 c-14 -11 -26 -27 -26 -34 0 -10 -9 -12 -35 -8 -29 5 -39 1 -65 -26 -28 -28 -31 -36 -25 -69 5 -29 2 -42 -9 -52 -10 -7 -16 -28 -16 -52 0 -47 35 -88 75 -88 15 0 38 -9 52 -20 14 -11 38 -20 52 -20 26 0 71 31 71 50 0 5 13 17 30 26 79 47 53 154 -38 154 l-34 0 27 -32 c22 -26 26 -39 21 -67 -10 -64 -65 -88 -127 -55 -59 30 -73 122 -28 185 27 38 69 52 140 47 56 -4 65 -8 95 -40 70 -77 71 -195 1 -275 -43 -49 -98 -73 -173 -73 -107 0 -194 60 -229 161 -17 47 -20 145 -5 183 9 24 7 26 -16 26 -14 0 -36 -11 -49 -25 -33 -32 -33 -78 0 -111 23 -23 24 -27 10 -47 -36 -51 -1 -127 58 -127 19 0 27 -5 27 -18 0 -50 64 -91 112 -71 23 9 32 9 46 -3 9 -8 25 -18 34 -21 22 -8 75 10 81 27 4 9 20 12 55 8 44 -4 51 -2 71 24 16 21 22 38 19 62 -3 28 0 35 18 42 28 11 54 48 54 76 0 13 -11 36 -26 53 -24 29 -24 31 -8 55 32 49 -9 116 -70 116 -25 0 -43 8 -64 30 -36 35 -69 38 -106 9z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M712 942 c-72 -26 -75 -28 -104 -85 -16 -33 -27 -61 -25 -64 3 -2 36 4 73 14 68 18 69 18 106 83 54 93 56 91 -50 52z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10230 896 c0 -40 -41 -42 -230 -10 -15 3 -8 -4 19 -16 114 -53 201 -152 201 -230 0 -77 -68 -131 -141 -110 -77 22 -137 96 -174 212 l-23 73 -1 -100 c-1 -110 -14 -148 -49 -153 -17 -3 -22 -9 -20 -24 4 -30 29 -42 72 -34 30 6 40 14 51 39 l13 32 11 -27 c22 -58 82 -84 132 -57 16 8 25 7 40 -7 27 -25 74 -22 104 6 34 32 39 55 21 91 -15 29 -14 33 4 57 31 39 25 70 -20 114 -39 36 -40 38 -16 38 43 0 77 60 60 104 -8 20 -54 21 -54 2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8890 896 c0 -2 8 -10 18 -17 15 -13 16 -12 3 4 -13 16 -21 21 -21 13z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1658 870 c24 -10 29 -29 10 -48 -9 -9 -9 -12 -1 -12 18 0 26 39 13 55 -7 8 -20 15 -29 14 -11 0 -9 -3 7 -9z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9911 873 c0 -5 12 -42 28 -83 26 -73 29 -76 87 -107 32 -18 62 -33 65 -33 3 0 -3 33 -14 74 l-20 73 -68 42 c-72 43 -79 46 -78 34z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1805 850 c-3 -6 1 -7 9 -4 18 7 21 14 7 14 -6 0 -13 -4 -16 -10z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M370 633 c-17 -6 -40 -32 -40 -45 0 -13 37 -9 47 5 14 17 24 47 15 46 -4 0 -14 -3 -22 -6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10247 450 c6 -21 49 -57 59 -48 7 8 -14 58 -25 58 -5 0 -16 3 -24 6 -12 4 -14 0 -10 -16z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSvgFrame);\nexport default __webpack_public_path__ + \"static/media/svgFrame.9d19aa1896df187c48bb62f8e3eb6c92.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"previewCardContainer\":\"previewCard_previewCardContainer__GPUhB\",\"previewFrame\":\"previewCard_previewFrame__8qc58\",\"previewCardContent\":\"previewCard_previewCardContent__hcaf0\"};","import React, {useState} from \"react\";\r\nimport classes from \"./previewCard.module.css\";\r\nimport cn from \"classnames\";\r\ninterface PreviewCardProps {\r\n  imgUrl: string;\r\n  contentText: string;\r\n  link: string;\r\n  isCircle?: boolean;\r\n}\r\nconst PreviewCard: React.FC<PreviewCardProps> = ({\r\n  imgUrl,\r\n  contentText,\r\n  isCircle = false,\r\n  link,\r\n}) => {\r\n  const [geometricStyle, setGeometricStyle] = useState({});\r\n  const onMoveGeoMetric = (e: React.MouseEvent) => {\r\n    setGeometricStyle({\r\n      transform: `rotateX(${\r\n        (e.clientX - window.innerWidth / 2) * -0.01\r\n      }deg) rotateY(${(e.clientY - window.innerHeight / 2) * -0.1}deg)`,\r\n    });\r\n  };\r\n  return (\r\n    <div style={{marginTop: \"10px\"}}>\r\n      <a\r\n        href={`#${link}`}\r\n        className={classes.previewCardContainer}\r\n        style={{...geometricStyle}}\r\n      >\r\n        <img\r\n          loading=\"lazy\"\r\n          src={imgUrl}\r\n          alt=\"frame\"\r\n          onMouseMove={onMoveGeoMetric}\r\n          className={classes.previewFrame}\r\n        />\r\n        <div\r\n          className={cn(classes.previewCardContent, {\r\n            [classes.previewCircleCard]: isCircle,\r\n          })}\r\n        >\r\n          {contentText}\r\n        </div>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\nexport default PreviewCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"previewBlockContainer\":\"previewMainBlock_previewBlockContainer__d9-OX\",\"descripPoint\":\"previewMainBlock_descripPoint__VWRq6\",\"examplePoint\":\"previewMainBlock_examplePoint__dpa+J\",\"activeLeftPoint\":\"previewMainBlock_activeLeftPoint__fYc44\",\"slide-left\":\"previewMainBlock_slide-left__Kjanf\",\"activeRightPoint\":\"previewMainBlock_activeRightPoint__2dj7P\",\"slide-right\":\"previewMainBlock_slide-right__-hvjQ\"};","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === 'root'\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === 'function') {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import React from \"react\";\r\nimport classes from \"./previewMainBlock.module.css\";\r\nimport ImageSlider from \"components/imageSlider/ImageSlider\";\r\nimport cn from \"classnames\";\r\nimport {useInView} from \"react-intersection-observer\";\r\ninterface PreaviewBlockProps {\r\n  text: string;\r\n  id: string;\r\n  reverse?: boolean;\r\n  images: string[];\r\n}\r\nconst PreviewMainBlock: React.FC<PreaviewBlockProps> = ({\r\n  text,\r\n  id,\r\n  reverse = false,\r\n  images,\r\n}) => {\r\n  const {ref, inView} = useInView({\r\n    threshold: 0,\r\n  });\r\n  return (\r\n    <div id={id} className={classes.previewBlockContainer} ref={ref}>\r\n      <div\r\n        className={cn(classes.descripPoint, {\r\n          [classes.activeLeftPoint]: inView,\r\n        })}\r\n      >\r\n        {reverse ? <ImageSlider images={images} isImgFile /> : text}\r\n      </div>\r\n      <div\r\n        className={cn(classes.examplePoint, {\r\n          [classes.activeRightPoint]: inView,\r\n        })}\r\n      >\r\n        {reverse ? text : <ImageSlider images={images} isImgFile />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PreviewMainBlock;\r\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"mainPage_mainContainer__NCZ2U\",\"mainContent\":\"mainPage_mainContent__4OdGX\",\"appPreview\":\"mainPage_appPreview__ElrgW\",\"appPreviewBlocks\":\"mainPage_appPreviewBlocks__Tvbuy\",\"scrollBtn\":\"mainPage_scrollBtn__Z3xzr\"};","import React from \"react\";\r\nimport SvgFrame from \"assets/images/svgFrame.svg\";\r\nimport PreviewCard from \"components/previewCard/PreviewCard\";\r\nimport PreviewMainBlock from \"components/previewMainBlock/PreviewMainBlock\";\r\nimport {\r\n  FURNITURE_HISTORY,\r\n  NEON_HISTORY,\r\n  VOL_PRINTERS_HISTORY,\r\n} from \"components/previewMainBlock/constants\";\r\nimport PrintHisImg1 from \"assets/images/printerHistory/print1.jpg\";\r\nimport PrintHisImg3 from \"assets/images/printerHistory/print3.jpg\";\r\n\r\nimport NeonHisImg1 from \"assets/images/neonHistory/neon1.jpeg\";\r\nimport NeonHisImg2 from \"assets/images/neonHistory/neon2.jpg\";\r\nimport NeonHisImg3 from \"assets/images/neonHistory/neon3.jpg\";\r\n\r\nimport FurnHisImg1 from \"assets/images/furnitureHistory/furn1.jpg\";\r\nimport FurnHisImg2 from \"assets/images/furnitureHistory/furn2.jpg\";\r\nimport FurnHisImg3 from \"assets/images/furnitureHistory/furn3.jpg\";\r\nimport FurnHisImg4 from \"assets/images/furnitureHistory/furn4.jpg\";\r\nimport FurnHisImg5 from \"assets/images/furnitureHistory/furn5.jpg\";\r\n\r\nimport classes from \"./mainPage.module.css\";\r\n\r\nconst previewCards = [\r\n  {\r\n    img: SvgFrame,\r\n    text: \"Home comfort, usefull and interesting furniture \",\r\n    link: \"art-furniture\",\r\n  },\r\n\r\n  {\r\n    img: SvgFrame,\r\n    text: \"Creative neon decors, DIY, neon lamps\",\r\n    link: \"art-neon\",\r\n    isCircle: true,\r\n  },\r\n  {\r\n    img: SvgFrame,\r\n    text: \"Creative 3D models\",\r\n    link: \"art-printers\",\r\n  },\r\n];\r\nconst previewContent = [\r\n  {\r\n    text: FURNITURE_HISTORY,\r\n    id: \"art-furniture\",\r\n    images: [FurnHisImg1, FurnHisImg2, FurnHisImg3, FurnHisImg4, FurnHisImg5],\r\n  },\r\n  {\r\n    text: NEON_HISTORY,\r\n    id: \"art-neon\",\r\n    images: [NeonHisImg1, NeonHisImg2, NeonHisImg3],\r\n    reverse: true,\r\n  },\r\n  {\r\n    text: VOL_PRINTERS_HISTORY,\r\n    id: \"art-printers\",\r\n    images: [PrintHisImg1, PrintHisImg3],\r\n  },\r\n];\r\nconst MainPage: React.FC = () => {\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className={classes.mainContent}>\r\n        <div className={classes.appPreview}>\r\n          {previewCards.map(card => (\r\n            <PreviewCard\r\n              key={card.text}\r\n              imgUrl={card.img}\r\n              contentText={card.text}\r\n              isCircle={card.isCircle}\r\n              link={card.link}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className={classes.appPreviewBlocks}>\r\n          {previewContent.map(block => (\r\n            <PreviewMainBlock\r\n              text={block.text}\r\n              id={block.id}\r\n              key={block.id}\r\n              images={block.images}\r\n              reverse={block.reverse}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div\r\n          onClick={() => window.scrollTo(0, 0)}\r\n          className={classes.scrollBtn}\r\n        >\r\n          Up&nbsp;&#8593;\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MainPage;\r\n","export const NEON_HISTORY = `На сегодняшний день неоновые вывески, украшающие здания и магазины, никого не удивляют. Улицы подсвечены огнями – это воспринимается как будничное явление. Однако введение этого технического новшества буквально сто лет назад шокировало граждан. Первые неоновые вывески были большой редкостью и встречались только в богатых районах городов.\r\n\r\nИзобретение неоновой лампы было запатентовано в 1915 году. У открытия была интересная предыстория, которая уходила корнями в далекий 1675 год. Именно тогда французский астроном Жан Пикар увидел чуть заметное свечение в трубке ртутного барометра. Это явление получило название «барометрического» свечения. Разумеется, тогда об электричестве ничего не было известно, поэтому ученый не смог объяснить происходящее. Но это событие послужило поводом для начала масштабных исследований загадочного света. В 1855 году произошел прорыв в этой области. Генрих Гейслер, немецкий физик, сделал трубку, которая стала предшественницей газоразрядных ламп. Так началась история неоновой лампы.\r\n\r\nЭто изобретение мгновенно распространилось и в разных концах мира начали проводить эксперименты. Внутрь прозрачной трубки закачали газ, и под воздействием электричества она стала светиться!`;\r\n\r\nexport const FURNITURE_HISTORY =\r\n  \"Покупая мебель, мы не всегда задумываемся о том, к какой категории ее отнести, и кто ее создал. Но только до того момента, пока на глаза попадается вещь, не вписывающаяся в рамки привычного. Необычный предмет интерьера запоминается и вызывает к себе интерес. Обычно дизайнерская мебель вызывает тот самый повышенный интерес. В том числе, к личности ее создателя.\";\r\n\r\nexport const VOL_PRINTERS_HISTORY =\r\n  'Хоть и 3D-печать - относительно новая технология, но ее история глубока, разнообразна и интересна - и, конечно, продолжает развиваться до сих пор. 3D-принтер появился в 1981 году, когда доктор Хидео Кодама изобрел одну из первых машин для быстрого прототипирования, которая создавала детали слой за слоем, используя смолу, полимеризуемую под воздействием ультрафиолетового света. В 1986 году первый патент на стереолитографию (SLA) был подан Чаком Халлом, который считается \"изобретателем 3D-печати\" за создание и коммерциализацию SLA и формата .stl - наиболее распространенного типа файлов, используемого для 3D-печати.';\r\n"],"names":["_ref","imgUrl","contentText","_ref$isCircle","isCircle","link","_useState","useState","_useState2","_slicedToArray","geometricStyle","setGeometricStyle","_jsx","style","marginTop","children","_jsxs","href","concat","className","classes","previewCardContainer","_objectSpread","loading","src","alt","onMouseMove","e","transform","clientX","window","innerWidth","clientY","innerHeight","previewFrame","cn","previewCardContent","_defineProperty","previewCircleCard","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","key","map","root","has","set","toString","get","observe","element","callback","arguments","length","undefined","fallbackInView","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","_createObserver","id","instance","thresholds","elements","observer","entries","forEach","entry","_a","inView","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","React","text","_ref$reverse","reverse","images","_useInView","delay","rootMargin","triggerOnce","skip","initialInView","onChange","_React2$useState","React2","_React2$useState2","ref","setRef","_React2$useState3","_React2$useState4","state","setState","current","entryTarget","previousEntryTarget","result","useInView","ImageSlider","isImgFile","previewCards","img","SvgFrame","previewContent","FurnHisImg1","FurnHisImg2","FurnHisImg3","FurnHisImg4","FurnHisImg5","NeonHisImg1","NeonHisImg2","NeonHisImg3","PrintHisImg1","PrintHisImg3","card","PreviewCard","block","PreviewMainBlock","onClick","scrollTo"],"sourceRoot":""}